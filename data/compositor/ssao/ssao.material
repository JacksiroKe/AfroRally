
// full screen quad with camera-to-pixel ray calculations

vertex_program ssao_vs_hlsl hlsl
{
    source ssao.hlsl
    target vs_3_0
    entry_point ssao_vs
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}

fragment_program ssao_ps_hlsl hlsl
{
    source ssao.hlsl
    entry_point ssao_ps
    // will run on anything with pixel shader 2.b and up
    target ps_3_0
    default_params
    {
		param_named_auto fogParams fog_params
		param_named_auto far far_clip_distance
    }
}

vertex_program ssaoBlur_vs_hlsl hlsl
{
    source ssao.hlsl
    target vs_3_0
    entry_point ssaoBlur_vs
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}
fragment_program ssaoBlurX_ps_hlsl hlsl
{
    source ssao.hlsl
    entry_point ssaoBlurX_ps
    target ps_3_0
    default_params
    {
        param_named_auto invTexSize inverse_texture_size 0
    }
}

fragment_program ssaoBlurY_ps_hlsl hlsl
{
    source ssao.hlsl
    entry_point ssaoBlurY_ps
    target ps_3_0
    default_params
    {
        param_named_auto invTexSize inverse_texture_size 0
    }
}

vertex_program ssaoMultiply_vs_hlsl hlsl
{
    source ssao.hlsl
    target vs_2_0
    entry_point ssaoMultiply_vs
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}
fragment_program ssaoMultiply_ps_hlsl hlsl
{
    source ssao.hlsl
    entry_point ssaoMultiply_ps
    target ps_2_0
    default_params
    {
    }
}






vertex_program ssao_vs_glsl glsl
{
    source ssao_vertex.glsl
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}

fragment_program ssao_ps_glsl glsl
{
    source ssao_fragment.glsl
    default_params
    {
		param_named_auto fogParams fog_params
		param_named_auto far far_clip_distance
		param_named geomMap int 0
        param_named randMap int 1
        param_named_auto projMatrix projection_matrix
    }
}

vertex_program ssaoBlur_vs_glsl glsl
{
    source ssao_blur_vertex.glsl
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}
fragment_program ssaoBlurX_ps_glsl glsl
{
    source ssao_blurx_fragment.glsl
    default_params
    {
        param_named_auto invTexSize inverse_texture_size 0
        param_named map int 0
        param_named geomMap int 1
    }
}

fragment_program ssaoBlurY_ps_glsl glsl
{
    source ssao_blury_fragment.glsl
    default_params
    {
        param_named_auto invTexSize inverse_texture_size 0
        param_named map int 0
        param_named geomMap int 1
    }
}

vertex_program ssaoMultiply_vs_glsl glsl
{
    source ssao_multiply_vertex.glsl
    default_params
    {
        param_named_auto wvp worldviewproj_matrix
    }
}
fragment_program ssaoMultiply_ps_glsl glsl
{
    source ssao_multiply_fragment.glsl
    default_params
    {
		param_named tex1 int 0
		param_named tex2 int 1
    }
}









vertex_program ssao_vs unified
{
	delegate ssao_vs_glsl
	delegate ssao_vs_hlsl
}

fragment_program ssao_ps unified
{
	delegate ssao_ps_glsl
	delegate ssao_ps_hlsl
}

vertex_program ssaoBlur_vs unified
{
	delegate ssaoBlur_vs_glsl
	delegate ssaoBlur_vs_hlsl
}
fragment_program ssaoBlurX_ps unified
{
	delegate ssaoBlurX_ps_glsl
	delegate ssaoBlurX_ps_hlsl
}

fragment_program ssaoBlurY_ps unified
{
	delegate ssaoBlurY_ps_glsl
	delegate ssaoBlurY_ps_hlsl
}

vertex_program ssaoMultiply_vs unified
{
	delegate ssaoMultiply_vs_glsl
	delegate ssaoMultiply_vs_hlsl
}
fragment_program ssaoMultiply_ps unified
{
	delegate ssaoMultiply_ps_glsl
	delegate ssaoMultiply_ps_hlsl
}





material ssao
{
    technique
    {
        pass
        {
            vertex_program_ref ssao_vs
            {
            }

            fragment_program_ref ssao_ps
            {
            }

            texture_unit geomMap
            {
                tex_address_mode clamp
                filtering bilinear
            }

            texture_unit randMap
            {
                texture random.png
                filtering none
            }
        }
    }
}

material ssaoBlurX
{
    technique
    {
        pass
        {
			vertex_program_ref ssaoBlur_vs
            {
            }
            fragment_program_ref ssaoBlurX_ps
            {
            }

            texture_unit map
            {
                tex_address_mode clamp
                filtering bilinear
            }

            texture_unit geomMap
            {
                tex_address_mode clamp
                filtering bilinear
            }
        }
    }
}

material ssaoBlurY
{
    technique
    {
        pass
        {
			vertex_program_ref ssaoBlur_vs
            {
            }
            fragment_program_ref ssaoBlurY_ps
            {
            }

            texture_unit map
            {
                tex_address_mode clamp
                filtering bilinear
            }

            texture_unit geomMap
            {
                tex_address_mode clamp
                filtering bilinear
            }
        }
    }
}

material modulate
{
    technique
    {
        pass
        {
			vertex_program_ref ssaoMultiply_vs
            {
            }
        
		    fragment_program_ref ssaoMultiply_ps
            {
            }

            texture_unit tex1
            {
                texture white.png
                filtering bilinear
            }

            texture_unit tex2
            {
                texture white.png
                filtering bilinear
            }
        }
    }
}
